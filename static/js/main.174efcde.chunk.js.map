{"version":3,"sources":["logo.svg","HeaderComponent.js","ListBooks.js","NavigationTabs.js","BooksAPI.js","SearchPage.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","className","Component","has","require","ListBooks","isSelected","thisValue","bookShelf","undefined","authorTitle","bookAuthors","authorsTitle","length","this","props","books","onChangeShelf","booksInShelves","map","book","index","showingBook","bookInShleves","filter","b","id","bookInfo","thumbnail","imageLinks","authors","src","title","averageRating","value","shelf","onChange","e","NavigationTabs","allItems","items","item","Object","keys","useState","find","key","currentTab","setTab","useTabs","selectedTab","setSelectedTab","style","left","findIndex","width","color","background","onClick","preventDefault","target","dataset","tab","document","getElementsByClassName","backgroundColor","onClickNav","changeTab","data-tab","api","token","localStorage","Math","random","toString","substr","headers","update","fetch","method","body","JSON","stringify","then","res","json","search","query","data","SearchPage","state","updateQuery","setState","updateBooks","BooksAPI","trim","showingBooks","Array","isArray","to","class","type","placeholder","event","App","prevState","getShowingBooks","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","base","getElementById"],"mappings":"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","file":"static/js/main.174efcde.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\n\n\nclass HeaderComponent extends Component {\n\n    render() {\n        return (\n            <header className='title-header'>\n            <div className='title-container'>\n                <h1 className='page-title'>The Booklet</h1>\n                <p className='page-subtitle'>Your best book tracker app!</p>\n            </div>\n            <div className=\"bottom-right\"></div>\n            <div className=\"bottom-left\"></div>\n            </header>\n        )\n    }\n\n}\n\nexport default HeaderComponent;","import React, { Component } from 'react';\nvar has = require('lodash.has');\n\nclass ListBooks extends Component {\n\n    isSelected = (thisValue, bookShelf) => {\n        return bookShelf === thisValue ? 'true' : undefined;\n    }\n\n    authorTitle = (bookAuthors) => {\n        let authorsTitle = ''\n        if (bookAuthors.length > 0) {\n            authorsTitle += 'By ' + bookAuthors[0]\n        }\n        if (bookAuthors.length > 1) {\n            authorsTitle += \", et al.\"\n        }\n        \n        return authorsTitle\n    }\n    \n    render() {\n        const { books, onChangeShelf, booksInShelves } = this.props\n\n        return (\n            <div className='list-items-grid'>\n                { books.map((book, index) => {\n                    if (!has(book, 'title')) return (<div></div>)\n\n                    var showingBook = book\n\n                    if(!!booksInShelves) {\n                        var bookInShleves = booksInShelves.filter((b) => (b.id === book.id))[0]\n                        if (bookInShleves !== undefined) {\n                            showingBook = bookInShleves\n                        }\n                    }\n\n                    const bookInfo = {\n                        thumbnail: has(showingBook, 'imageLinks.thumbnail') ? showingBook.imageLinks.thumbnail : \"\",\n                        authors:  has(showingBook, 'authors') ? this.authorTitle(showingBook.authors) : \"\",\n                    }\n\n                return(\n                    <div className='list-item' key={index}>\n                        <div className='book-info-container'>\n                            <div className='info-wrapper'>\n                                <img className='book-img' src={bookInfo.thumbnail}></img>\n                                <div className='book-header'>\n                                    <h3 className='book-title'>{showingBook.title}</h3>\n                                    <p className='book-rating'>{showingBook.averageRating}</p>\n                                </div>\n                                <p className='book-author' >{bookInfo.authors}</p>\n                            </div>\n                            <div className='form-container'>\n                                <form>\n                                    <select value={showingBook.shelf} onChange={(e) => onChangeShelf(e, showingBook)} className='select-form'>\n                                        <option value=\"none\">None</option>\n                                        <option value=\"currentlyReading\">Currently reading</option>\n                                        <option value=\"wantToRead\">Want to read</option>\n                                        <option value=\"read\">Read</option>\n                                    </select>\n                                </form>\n                                <div> <p>{showingBook.shelf}</p> </div>\n                            </div>\n                        </div>\n                    </div>)\n                    })}\n            </div>\n        )\n    }\n\n}\n\nexport default ListBooks;","import React, { useState } from \"react\";\nimport { useTabs } from \"react-headless-tabs\";\n\nexport default function NavigationTabs(props) {\n\n    const allItems = [{'All': 'all',\n                    'Currently reading': 'currentlyReading',\n                    'Want to read': 'wantToRead',\n                    'Read': 'read'}];\n    \n    const items = allItems.map((item) => (Object.keys(item)))[0]\n\n    const [currentTab, setTab] = useState(Object.keys(allItems[0]).find(key => allItems[0][key] === props.currentTab));\n    \n    const [selectedTab, setSelectedTab] = useTabs(items, currentTab);\n\n    const changeTab = (e, item) => {\n        e.preventDefault();\n    \n        const target = (e.target).dataset.tab;\n        if (typeof target !== \"string\") {\n          return;\n        }\n        setSelectedTab(target);\n\n        setTab(item);\n\n        if (item === 'All') {\n          document.getElementsByClassName('bottom-left')[0].style.backgroundColor = '#e9e0d3'\n          document.getElementsByClassName('bottom-right')[0].style.backgroundColor = '#FAF8F5'\n        }\n        else if (item === 'Read') {\n          document.getElementsByClassName('bottom-right')[0].style.backgroundColor = '#e9e0d3'\n          document.getElementsByClassName('bottom-left')[0].style.backgroundColor = '#FAF8F5'\n        }\n        else {\n          document.getElementsByClassName('bottom-right')[0].style.backgroundColor = '#FAF8F5'\n          document.getElementsByClassName('bottom-left')[0].style.backgroundColor = '#FAF8F5'\n        }\n\n        props.onClickNav(allItems[0][item])\n      };\n    \n    const getSelectedTabIndex = () =>\n    items.findIndex((item) => item === selectedTab);\n\n    return (\n        <div>\n          <nav className='nav-tabs-container'>\n            <div className='tab-bottom-line' style={{\n                left: `calc((100% / ${items.length}) * ${getSelectedTabIndex()})`,\n                width: `calc(100% / ${items.length})`}} />\n            <div className='tab-links'>\n              {items.map((item) => {\n                return (\n                  <a className='link'\n                    key={item}\n                    style={{\n                        color: selectedTab === item ? \"green\" : \"black\",\n                        background: selectedTab === item ? \"#e9e0d3\" : \"#FAF8F5\"\n                    }}\n                    onClick={(e) => currentTab !== item ? changeTab(e, item) : ()=>{}}\n                    data-tab={item}\n                  >\n                    {item}\n                  </a>\n                );\n              })}\n            </div>\n          </nav>\n     \n        </div>\n      )\n}\n","/* This API code implementation is authored by Udacity and taken directly from https://github.com/udacity/reactnd-project-myreads-starter/blob/master/src/BooksAPI.js */\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)","import HeaderComponent from './HeaderComponent'\nimport React, { Component } from 'react';\nimport ListBooks from './ListBooks';\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\n\nclass SearchPage extends Component {\n    state = {\n        query: '',\n        books: []\n    }\n\n    updateQuery = (query) => {\n        this.setState({ query: query }, this.updateBooks(query))\n    }\n\n    updateBooks = (query) => {\n        BooksAPI.search(!!query.trim() ? query.trim() : \"*\").then((showingBooks) => {\n            this.setState({\n                books: (showingBooks !== undefined && Array.isArray(showingBooks)) ? showingBooks : []\n            }, ()=>{})\n        })\n    }\n\n    render() {\n\n        const { query, books } = this.state;\n\n        return (\n            <div>\n                <Link to='/' className='back-link'></Link>\n                <HeaderComponent />\n                <div class=\"search-container\">\n                    <input class=\"search-input\" type=\"text\" placeholder=\"Search...\"\n                           value={query}\n                           onChange={(event) => this.updateQuery(event.target.value)}/>\n                </div>\n                <ListBooks books={books}\n                onChangeShelf={this.props.onChangeShelf}\n                booksInShelves={this.props.booksInShelves}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;","import logo from './logo.svg';\nimport './App.css';\nimport HeaderComponent from './HeaderComponent'\nimport ListBooks from './ListBooks';\nimport React, { Component } from 'react';\nimport NavigationTabs from './NavigationTabs';\nimport SearchPage from './SearchPage';\nimport { Link, Route, Routes } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\n\nclass App extends Component {\n\n  state = {\n    books: [],\n    currentTab: 'currentlyReading',\n}\n\ncomponentDidMount() {\n  BooksAPI.getAll()\n  .then((books) => {\n    this.setState(\n      {\n        books: books\n      })\n  })\n  }\n\n  onChangeShelf = (event, book) => {\n    \n    if (this.state.books.filter(b => b.title === book.title).length < 1) {\n      this.setState({ books: [...this.state.books, {...book, shelf: event.target.value }]}, ()=> {})\n    }\n  \n    else {\n    this.setState(prevState => ({\n      books: prevState.books.map(\n        b => b.title === book.title ? { ...b, shelf: event.target.value } : b\n      ),\n    \n    }), ()=> {})\n    }\n  \n    BooksAPI.update(book, event.target.value)\n  };\n\nonClickNav = (value) => {\n  this.setState({\n    currentTab: value\n  }, ()=> {} /* callback for instance update of state*/ )\n\n}\n\ngetShowingBooks = () => {\n\n  if (this.state.currentTab !== 'all') {\n    return this.state.books.filter((b) => (\n       b.shelf === this.state.currentTab\n    ))\n  }\n\n  return this.state.books;\n}\n\n\n\n  render() {\n    return (\n    <div>\n    <Routes>\n      <Route path=\"/\" element={(\n          <div>\n            <Link to='/search' className='add-book-button'/>\n            <HeaderComponent />\n            <NavigationTabs currentTab={this.state.currentTab} onClickNav={this.onClickNav}/>\n            <ListBooks books={this.getShowingBooks()}\n                  onChangeShelf={this.onChangeShelf} />\n          </div> )} \n      />\n\n      <Route path='/search' element= {(\n          <div>\n            <SearchPage booksInShelves={this.state.books}\n                  onChangeShelf={this.onChangeShelf} />          \n                  </div> )} \n      />\n    </Routes>\n    </div>\n)}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  <HashRouter base=\"/\">\n    <App />\n  </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}